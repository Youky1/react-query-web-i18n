"use strict";(self.webpackChunkreact_query_web_i18n=self.webpackChunkreact_query_web_i18n||[]).push([[4721],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return f}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),p=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=p(e.components);return n.createElement(c.Provider,{value:r},e.children)},g={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},s=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(t),f=o,m=s["".concat(c,".").concat(f)]||s[f]||g[f]||a;return t?n.createElement(m,i(i({ref:r},u),{},{components:t})):n.createElement(m,i({ref:r},u))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=s;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}s.displayName="MDXCreateElement"},8316:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return s}});var n=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],l={id:"setLogger",title:"setLogger"},c=void 0,p={unversionedId:"reference/setLogger",id:"reference/setLogger",title:"setLogger",description:"setLogger",source:"@site/docs/reference/setLogger.md",sourceDirName:"reference",slug:"/reference/setLogger",permalink:"/react-query-web-i18n/reference/setLogger",editUrl:"https://github.com/cangSDARM/react-query-web-i18n/docs/reference/setLogger.md",tags:[],version:"current",lastUpdatedAt:1643295702,formattedLastUpdatedAt:"1/27/2022",frontMatter:{id:"setLogger",title:"setLogger"}},u=[{value:"<code>setLogger</code>",id:"setlogger",children:[],level:2}],g={toc:u};function s(e){var r=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},g,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"setlogger"},(0,a.kt)("inlineCode",{parentName:"h2"},"setLogger")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"setLogger")," is an optional function that allows you to replace the default ",(0,a.kt)("inlineCode",{parentName:"p"},"logger")," used by React Query to log errors. By default, the ",(0,a.kt)("inlineCode",{parentName:"p"},"window.console")," object is used. If no global ",(0,a.kt)("inlineCode",{parentName:"p"},"console")," object is found in the environment, nothing will be logged."),(0,a.kt)("p",null,"Examples:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { setLogger } from 'react-query'\nimport { printLog, printWarn, printError } from 'custom-logger'\n\n// Custom logger\nsetLogger({\n  log: printLog,\n  warn: printWarn,\n  error: printError,\n})\n\n// Sentry logger\nsetLogger({\n  log: message => {\n    Sentry.captureMessage(message)\n  },\n  warn: message => {\n    Sentry.captureMessage(message)\n  },\n  error: error => {\n    Sentry.captureException(error)\n  },\n})\n\n// Winston logger\nsetLogger(winston.createLogger())\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Options")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"logger: Logger"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Must implement the ",(0,a.kt)("inlineCode",{parentName:"li"},"log"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"warn"),", and ",(0,a.kt)("inlineCode",{parentName:"li"},"error")," methods.")))))}s.isMDXComponent=!0}}]);