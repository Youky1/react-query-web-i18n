(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{131:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),c=(n(0),n(142)),o={id:"MutationCache",title:"MutationCache"},i={unversionedId:"reference/MutationCache",id:"reference/MutationCache",isDocsHomePage:!1,title:"MutationCache",description:"The MutationCache is the storage for mutations.",source:"@site/docs/reference/MutationCache.md",slug:"/reference/MutationCache",permalink:"/react-query-web-i18n/reference/MutationCache",editUrl:"https://github.com/cangSDARM/react-query-web-i18n/docs/reference/MutationCache.md",version:"current",lastUpdatedAt:1614763020},l=[{value:"<code>mutationCache.getAll</code>",id:"mutationcachegetall",children:[]},{value:"<code>mutationCache.subscribe</code>",id:"mutationcachesubscribe",children:[]},{value:"<code>mutationCache.clear</code>",id:"mutationcacheclear",children:[]}],b={toc:l};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"MutationCache")," is the storage for mutations."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Normally, you will not interact with the MutationCache directly and instead use the ",Object(c.b)("inlineCode",{parentName:"strong"},"QueryClient"),".")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},"import { MutationCache } from 'react-query'\n\nconst mutationCache = new MutationCache({\n  onError: error => {\n    console.log(error)\n  },\n})\n")),Object(c.b)("p",null,"Its available methods are:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"#mutationcachegetall"},Object(c.b)("inlineCode",{parentName:"a"},"getAll"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"#mutationcachesubscribe"},Object(c.b)("inlineCode",{parentName:"a"},"subscribe"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"#mutationcacheclear"},Object(c.b)("inlineCode",{parentName:"a"},"clear")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Options")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"onError?: (error: unknown, variables: unknown, context: unknown, mutation: Mutation) => void"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"Optional"),Object(c.b)("li",{parentName:"ul"},"This function will be called if some mutation encounters an error.")))),Object(c.b)("h2",{id:"mutationcachegetall"},Object(c.b)("inlineCode",{parentName:"h2"},"mutationCache.getAll")),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"getAll")," returns all mutations within the cache."),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Note: This is not typically needed for most applications, but can come in handy when needing more information about a mutation in rare scenarios")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},"const mutations = mutationCache.getAll()\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"Mutation[]"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"Mutation instances from the cache")))),Object(c.b)("h2",{id:"mutationcachesubscribe"},Object(c.b)("inlineCode",{parentName:"h2"},"mutationCache.subscribe")),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"subscribe")," method can be used to subscribe to the mutation cache as a whole and be informed of safe/known updates to the cache like mutation states changing or mutations being updated, added or removed."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},"const callback = mutation => {\n  console.log(mutation)\n}\n\nconst unsubscribe = mutationCache.subscribe(callback)\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Options")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"callback: (mutation?: Mutation) => void"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"This function will be called with the mutation cache any time it is updated.")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"unsubscribe: Function => void"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"This function will unsubscribe the callback from the mutation cache.")))),Object(c.b)("h2",{id:"mutationcacheclear"},Object(c.b)("inlineCode",{parentName:"h2"},"mutationCache.clear")),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"clear")," method can be used to clear the cache entirely and start fresh."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},"mutationCache.clear()\n")))}u.isMDXComponent=!0},142:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),u=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,d=p["".concat(o,".").concat(m)]||p[m]||s[m]||c;return n?r.a.createElement(d,i(i({ref:t},b),{},{components:n})):r.a.createElement(d,i({ref:t},b))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,o=new Array(c);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var b=2;b<c;b++)o[b]=n[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);